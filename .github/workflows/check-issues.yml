name: Weekly Inactive Member Tracker
on:
  schedule:
    - cron: '0 16 * * SAT'  # UTC 周六16:00 = 北京时间周日00:00
  workflow_dispatch:

permissions:
  contents: write
  issues: read

jobs:
  track_inactive:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Fetch Organization Members
        id: get-members
        env:
          ORG: "QFNU-PCT"
          TOKEN: ${{ secrets.ORG_TOKEN }}
        run: |
          page=1
          > logins.txt
          while true; do
            logins=$(curl -s \
              -H "Authorization: Bearer $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/orgs/$ORG/members?per_page=100&page=$page" \
              | jq -r '.[].login')
            [ -z "$logins" ] && break
            echo "$logins" >> logins.txt
            ((page++))
          done
          echo "logins_file=logins.txt" >> $GITHUB_OUTPUT

      - name: Get Member Emails
        id: get-emails
        env:
          TOKEN: ${{ secrets.ORG_TOKEN }}
        run: |
          > members.csv
          echo "username,email" >> members.csv
          while read username; do
            email=$(curl -s \
              -H "Authorization: Bearer $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/users/$username" \
              | jq -r '.email // empty')
            echo "$username,$email" >> members.csv
            sleep 0.5
          done < ${{ steps.get-members.outputs.logins_file }}
          echo "members_file=members.csv" >> $GITHUB_OUTPUT

      - name: Get Weekly PR Contributors
        id: fetch-prs
        env:
          REPO: "QFNU-PCT/Note"
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 计算一周前的日期（ISO 8601 格式）
          since_date=$(date -d "7 days ago" +%Y-%m-%dT%H:%M:%SZ)
          # 拉取最近一周内所有 issue（包括 PR），然后筛选出 pull_request 字段非空的条目
          contributors=$(curl -s \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/issues?since=$since_date&state=all&per_page=100" \
            | jq -r 'map(select(.pull_request != null)) | .[].user.login' \
            | sort -u \
            | tr '\n' ',')
          echo "contributors=${contributors%,}" >> $GITHUB_OUTPUT

      - name: Generate Inactive Member List
        id: generate-list
        run: |
          echo "username,email" > inactive_members.csv
          if [ -n "${{ steps.fetch-prs.outputs.contributors }}" ]; then
            # 有活跃 PR 提交者，就把他们过滤掉
            grep -Fvf <(echo "${{ steps.fetch-prs.outputs.contributors }}" | tr ',' '\n' | sort) \
              ${{ steps.get-members.outputs.members_file }} >> inactive_members.csv
          else
            # 如果一周内无人提交 PR，所有成员都算未提交
            tail -n +2 ${{ steps.get-members.outputs.members_file }} >> inactive_members.csv
          fi
          echo "inactive_count=$(($(wc -l < inactive_members.csv)-1))" >> $GITHUB_OUTPUT

      - name: Commit Report to Repo
        if: ${{ steps.generate-list.outputs.inactive_count > 0 }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          target_dir="inactive_reports/$(date +%F)"
          mkdir -p "$target_dir"
          mv inactive_members.csv "$target_dir/inactive_members.csv"

          # 清理中间文件
          rm -f logins.txt members.csv

          git pull --rebase origin main
          git add "$target_dir"
          git commit -m "Add weekly PR inactivity report $(date +%F)"
          git push origin main
